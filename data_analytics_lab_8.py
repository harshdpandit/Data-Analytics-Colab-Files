# -*- coding: utf-8 -*-
"""Data Analytics Lab 8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zcTDCjsd4l7X1kspzbGVY1jyBmB1s-0u
"""

import pandas as pd
import numpy as np

class Myclass:
  x=5

pl=Myclass
print(pl.x)

class person: # a way to define a class
  def __init__(self,name,age): #this function should be present in every class,
  #self name not necessary, can use another variable
    self.name=name
    self.age=age
  def myfunc(self):
    print("Hello my name is {}".format(self.name))
    print("Hello my age is {}".format(self.age))

pl=person('Harsh',20) #declaring object of a class
pl.myfunc()

class persn:
  def __init__(self,name):
    self.name=name
  def myfunc(self):
    print("Hello my name is {}".format(self.name))

pl=persn('Harsh')
pl.myfunc()

p2=persn('Naira')
p2.myfunc()

p3=persn('Shayana')
p3.myfunc()

del pl.age #deleting a attribute
print(pl.age)

print(pl.name)

del pl
print(pl.name)

#inheritance : inheritance properties of one class by another class

class Person :
  def __init__(self,fname,lname):
    self.firstname=fname
    self.lastname=lname
  def printname(self):
    print('My name is : {} {}'.format(self.firstname,self.lastname))

class Student(Person):
  pass

x=Student('Harsh','Pandit')
x.printname()

y=Person('Naira','Talwar')
y.printname()

class Person :
  def __init__(self,fname,lname):
    self.firstname=fname
    self.lastname=lname
  def printname(self):
    print('My name is : {} {}'.format(self.firstname,self.lastname))

class Student(Person):
  def __init_(self,fname,lname):
    Person.__init__(self,fname,lname)

x=Student('Harsh','Pandit')
x.printname()

class Person :
  def __init__(self,fname,lname):
    self.firstname=fname
    self.lastname=lname

  def printname(self):
    print('My name is : {} {}'.format(self.firstname,self.lastname))

class Student(Person):
  def __init_(self,fname,lname):
    super().__init__(fname,lname) #wihtout knowing the parent class we inherit the functionalities

x=Student('Harsh','Pandit')
x.printname()

class Person :
  def __init__(self,fname,lname):
    self.firstname=fname
    self.lastname=lname

  def printname(self):
    print('My name is : {} {}'.format(self.firstname,self.lastname))

class Student(Person):
  def __init__(self,fname,lname,year):
    super().__init__(fname,lname)
    self.graduationyear=year
    #def welcome(self):
    #print('The graduation year is {}'.format(self.year))
x=Student('Harsh','Pandit',2020)
print(x.graduationyear)

class Person :
  def __init__(self,fname,lname):
    self.firstname=fname
    self.lastname=lname

  def printname(self):
    print('My name is : {} {}'.format(self.firstname,self.lastname))

class Student(Person):
  def __init__(self,fname,lname,year):
    super().__init__(fname,lname)
    self.graduationyear=year
  def welcom(self):
    print(self.firstname,self.lastname,self.graduationyear)

x=Student('Harsh','Pandit',2020)
x.welcom()

class India():
  def capital(self):
    print('New Delhi is capital of India.')
  def language(self):
    print('Hindi is the most widely spoken language of India')
  def type(self):
    print("India is a developing country")

class USA():
  def capital(self):
    print('Washington DC is capital of USA.')
  def language(self):
    print('English is the most widely spoken language of USA')
  def type(self):
    print("USA is a developed country")

class Bird():
  def intro(self):
    print('Introduction')
  def flight(self):
    print('flight')

class sparrow(Bird):
  def flight(self):
    print('Sparrows can fly')

class ostrich(Bird):
  def flight(self):
    print('Ostrich can fly')

obj_bird=Bird()
obj_sparrow=sparrow()
obj_ost=ostrich()

obj_bird.intro()
obj_bird.flight()

obj_sparrow.intro()
obj_sparrow.flight()


obj_ost.intro()
obj_ost.flight()

