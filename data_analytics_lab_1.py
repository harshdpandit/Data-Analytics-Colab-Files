# -*- coding: utf-8 -*-
"""Data Analytics Lab 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B51VE8ChjrMVlNFfEv5HW1LytfcNd-88
"""

if 5>2:
 print('five is greater than 2')
else:
  print('false')

a=int(input("Enter the first number: "))
print(a)

#1 sum of squares
#2. fibonnaci numbers
#3. prime numbers in a range

# sum of squares
first_number=int(input("Enter the first number: "))
last_number=int(input("Enter the last number: "))

if (first_number > last_number):
  temp=first_number
  first_number=last_number
  last_number=temp

sum=0
while (first_number != last_number):
  sum +=first_number**2
  first_number+=1
sum +=first_number**2

print('Sum is :',sum)

# Python program to display all the prime numbers within an interval
lower = 1
upper = int(input("Enter the last number: "))

print("Prime numbers between", lower, "and", upper, "are:")

for num in range(lower, upper + 1):
   # all prime numbers are greater than 1
   if num > 1:
     for i in range(2, num):
       if (num % i) == 0:
         break
       else:
         print(num)

last_num=int(input('End value: '))
n=last_num
sum_of_cube=(n*(n+1)/2)
print('Sum is',sum_of_cube**2)

character=str(input('Enter the character: '))
print('Ascii value is: ',ord(character))

num=int(input('Enter number to be checked: '))
is_fibonacci=False
square_num=5*num**2
num1=square_num+4
num1=square_num-4

if isinstance(num1, int) or isinstance(num2, int):
  print(str(num)+' is fibonacci number')

def harsh(num,a,b):
  global n
  n=a+b+num
  #print(num)
n=3
harsh(23.45,3,4)
print(n)

last_num=int(input('Enter the nth term of series: '))
first_num=0
next_num=1
sum=0
print("series is: ")
print(0)
print(1)
for i in range (1,last_num+1):
  sum=first_num+next_num
  first_num=next_num
  next_num=sum
  print(sum)

lst=[1,2,3,4,5,6]
for i in lst:
  print(i)

