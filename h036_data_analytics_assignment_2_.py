# -*- coding: utf-8 -*-
"""H036 Data Analytics Assignment 2 .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12XLOuqOpg6J7F6cN9c6hIUurfBc48Xzc

Name: Harsh Pandit

Roll: H036

Assignment 2
"""

import numpy as np

#WAP to add two matrices
matA=np.array([[1,2],[2,3]])
matB=np.array([[11,42],[12,73]])
print('Sum of two matrices is :')
print('{}'.format(matA+matB))

#WAP to multiply two matrices
matA=np.array([[1,2],[2,3]])
matB=np.array([[11,42],[12,73]])
print('Multiplication of two matrices is :')
print('{}'.format(matA*matB))

#WAP to count the number of lines in the text file.
file1=open('H036 Harsh.txt','r')
count=0
for word in file1:
  count+=1
print('Number of sentences in a text file are: {}'.format(count))

#WAP to find the line number in which given word is present using Python?
file1=open('H036 Harsh.txt','r')
find='Kesariya'
count=0
for word in file1:
  print('Word found at sentence number: {}'.format(count)) if find in word else count
  count+=1

#Write a program which will find all such numbers which are divisible by 7
#but are not a multiple of 5, between 2000 and 3200
start_no=2000
end_no=3200
lst=[]
for i in range(start_no,end_no):
  lst.append(i) if ((i%7 ==0) and (i%5 != 0)) else i
print('The numbers are:')
print('{}'.format(lst))

#Write a program that accepts a sentence and calculate the number of letters and digits.
no_lst=['1','2','3','4','5','6','7','8','9','0']
string1='Hello My name is harsh and my age is 20'
fnd=[]
bkspc_cnt=0
for i in string1:
  fnd.append(i) if i in no_lst else i #appends digits in list
  if i== ' ': #counts number of backspace
    bkspc_cnt+=1
temp=len(string1)-len(fnd)-bkspc_cnt
print(' The number of letters are {} and number of digits are {}'.format(temp,(len(fnd))))

#Write a program that accepts a sentence and calculate the number of uppercase letters andlowercase letters.
string_given='My Name is Harsh Pandit'
string=string_given.replace(' ','')
string_uppercase=string.upper()
string_lowercase=string.lower()
upper_lst=list(string_uppercase)
lower_lst=list(string_lowercase)
lower_cnt=0
upper_cnt=0
for letter in string:
  if letter in upper_lst:
    upper_cnt+=1
  if letter in lower_lst:
    lower_cnt+=1
print('Number of lowercase letters is {} and uppercase letters is {}'.format(lower_cnt,upper_cnt))

#Define a function that can accept two strings as
#input and print the string with maximumlength in the console.
#If two strings have the same length,
#then the function should print all strings line by line.

string1=('My name is Harsh Pandit. Wassup?')
string2=('My age is 20. Hi!')
if len(string1)==len(string2):
  lst1=[]
  lst2=[]
  lst1=string1.rsplit('. ')
  lst2=string2.rsplit('. ')
  for i in lst1:
    print(i)
  for i in lst2:
    print(i)
else:
  print(string1) if len(string1)>len(string2) else print(string2)

#WAP to find the unique values from the dictionary values.
dictionary={1:1,2:1,3:1,4:12,5:34,6:2,7:2,8:12}
unq_val=set(dictionary.values())
print('Unique values are : {}'.format(unq_val))

#WAP to sort the keys in the dictionary
dictionary={'a':1,'z':1,'q':12,'x':34,'b':2,'n':2,'f':12,'p':1}
key_lst=list(dictionary.keys())
srtd_key_lst=key_lst
srtd_key_lst.sort()
print('Sorted key list is :{}'.format(srtd_key_lst))

#WAP to add dictionary keys and values in the list
dictionary={1:1,2:1,3:1,4:12,5:34,6:2,7:2,8:12}
key=list(dictionary.keys())
val=list(dictionary.values())
print('Keys are : {}'.format(key))
print('Values are : {}'.format(val))

#WAP to count the frequency of the number in the list using a dictionary.
lst=[1,1,1,2,2,3,3,3,3,3,3,4,5]
dict_keys=set(lst)
dictionary={}
for key in dict_keys:
  count=0
  dictionary[key]=0
  for i in lst:
    if i==key:
      count+=1
  dictionary[key]=count
print('The frquency is :{}'.format(dictionary))

#WAP to merge two dictionaries
dict1={'a':1,'z':1,'q':12,'x':34,'b':2,'n':2,'f':12,'p':1}
dict2={1:1,2:1,3:1,4:12,5:34,6:2,7:2,8:12}
dict3=dict1
dict3.update(dict2)
print('Updated dictionay is :')
print(dict3)